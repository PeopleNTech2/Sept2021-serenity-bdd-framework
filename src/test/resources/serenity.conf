# we can also pass serenity parameters in serenity.conf file
#webdriver {
#  driver = chrome
#  use.driver.service.pool = false
#}
#headless.mode = true

# Chrome options can be defined using the chrome.switches property
#
#chrome.switches="""--start-maximized;--test-type;--no-sandbox;--ignore-certificate-errors;
#                   --disable-popup-blocking;--disable-default-apps;--disable-extensions-file-access-check;
#                   --incognito;--disable-infobars,--disable-gpu"""
#
# Define drivers for different platforms. Serenity will automatically pick the correct driver for the current platform

# drivers {
#   windows {
#     webdriver.chrome.driver = src/test/resources/webdriver/windows/chromedriver.exe
#     webdriver.gecko.driver = src/test/resources/webdriver/windows/geckodriver.exe
#     webdriver.ie.driver = src/test/resources/webdriver/windows/IEDriverServer.exe
#   }
#   mac {
#     webdriver.chrome.driver = src/test/resources/webdriver/mac/chromedriver
#     webdriver.gecko.driver = src/test/resources/webdriver/mac/geckodriver-v0.26.0-macos.tar
#   }
#   linux {
#     webdriver.chrome.driver = src/test/resources/webdriver/linux/chromedriver
#     webdriver.gecko.driver = src/test/resources/webdriver/linux/geckodriver-v0.26.0-linux64_orig.tar
#   }
# }

#
# This section defines environment-specific configuration for different environments.
# You can define normal Serenity properties, such as webdriver.base.url, or custom ones
# We can use the environment system property to use the properties for a given environment.
# Example: mvn verify -Denvironment=staging
# The default environment will be used if no other value is provided.
#

environments {
  default {
    webdriver.base.url = "https:www.amazon.com"
  }
  dev {
    webdriver.base.url = ""
  }
  prod {
    webdriver.base.url = ""
  }
}